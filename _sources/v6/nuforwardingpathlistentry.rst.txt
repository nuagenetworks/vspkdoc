.. _nuforwardingpathlistentry:

nuforwardingpathlistentry
===========================================

.. class:: nuforwardingpathlistentry.NUForwardingPathListEntry(bambou.nurest_object.NUMetaRESTObject,):

Forwarding path list entry to be associated with forwarding path list for l4 based policy to PAT / IKE to underlay.


Attributes
----------


- ``fc_override``: Value of the Service Class to be overridden in the packet when the match conditions are satisfied.

- ``dscp_remarking``: Remarking value for the DSCP field in IP header of customer packet.DSCP value range from enumeration of 65 values: NONE, 0, 1, ..., 63

- ``last_updated_by``: ID of the user who last updated the object.

- ``remote_uplink_preference``: Indicates the preferencial path selection for network traffic.

- ``sla_aware``: This flag denotes whether the Uplink Preference configured by the user will work with AAR or will over-ride AAR.

- ``embedded_metadata``: Metadata objects associated with this entity. This will contain a list of Metadata objects if the API request is made using the special flag to enable the embedded Metadata feature. Only a maximum of Metadata objects is returned based on the value set in the system configuration.

- ``entity_scope``: Specify if scope of entity is Data center or Enterprise level

- ``forwarding_action`` (**Mandatory**): Type of forwarding action associated with this entry.

- ``uplink_preference``: Type of forwarding uplink preference associated with this entry. In case of forwardingAction "IKE", uplinkPreference must not be set.

- ``priority``: Autogenerated priority of a Forwarding Path List Entry for a given Forwarding Path List.

- ``external_id``: External object ID. Used for integration with third party systems




Children
--------

================================================================================================================================================               ==========================================================================================
**class**                                                                                                                                                      **fetcher**

:ref:`numetadata.NUMetadata<numetadata>`                                                                                                                         ``metadatas`` 
:ref:`nuglobalmetadata.NUGlobalMetadata<nuglobalmetadata>`                                                                                                       ``global_metadatas`` 
================================================================================================================================================               ==========================================================================================



Parents
--------


- :ref:`nuforwardingpathlist.NUForwardingPathList<nuforwardingpathlist>`

