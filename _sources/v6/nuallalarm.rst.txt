.. _nuallalarm:

nuallalarm
===========================================

.. class:: nuallalarm.NUAllAlarm(bambou.nurest_object.NUMetaRESTObject,):

The alarm API allows the management of system alarms.


Attributes
----------


- ``target_object``: Identifies affected Entity.  Example: Alarm generated by TCA for Domain domain1(Packets towards a VM, Breach)

- ``last_updated_by``: ID of the user who last updated the object.

- ``last_updated_date``: Time stamp when this object was last updated.

- ``acknowledged``: Flag to indicate that alarm is already acknowledged or not

- ``remedy``: Remedial actions for the alarm.

- ``description``: Description of the alarm

- ``severity``: Severity of the alarm.

- ``timestamp``: Indicates the time that the alarm was triggered

- ``title`` (**Mandatory**): The alarm title.  Each type of alarm will generate its own title

- ``alarmed_object_id``: Alarmed Object ID

- ``embedded_metadata``: Metadata objects associated with this entity. This will contain a list of Metadata objects if the API request is made using the special flag to enable the embedded Metadata feature. Only a maximum of Metadata objects is returned based on the value set in the system configuration.

- ``enterprise_id``: Enterprise that this alarm belongs to

- ``entity_scope``: Specify if scope of entity is Data center or Enterprise level

- ``creation_date``: Time stamp when this object was created.

- ``error_condition``: Identifies the error condition

- ``number_of_occurances``: Number of times that the alarm was triggered

- ``owner``: Identifies the user that has created this object.

- ``external_id``: External object ID. Used for integration with third party systems

- ``system_id``: System ID of the Gateway




Children
--------

================================================================================================================================================               ==========================================================================================
**class**                                                                                                                                                      **fetcher**

:ref:`nupermission.NUPermission<nupermission>`                                                                                                                   ``permissions`` 
:ref:`numetadata.NUMetadata<numetadata>`                                                                                                                         ``metadatas`` 
:ref:`nuglobalmetadata.NUGlobalMetadata<nuglobalmetadata>`                                                                                                       ``global_metadatas`` 
================================================================================================================================================               ==========================================================================================



Parents
--------


- :ref:`nuenterprise.NUEnterprise<nuenterprise>`

