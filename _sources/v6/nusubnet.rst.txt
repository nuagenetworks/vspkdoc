.. _nusubnet:

nusubnet
===========================================

.. class:: nusubnet.NUSubnet(bambou.nurest_object.NUMetaRESTObject,):

This is the definition of a subnet associated with a Zone.


Attributes
----------


- ``pat_enabled``: None

- ``dhcp_relay_status``: None

- ``dpi``: determines whether or not Deep packet inspection is enabled

- ``ip_type``: IPv4, DUALSTACK or IPv6

- ``ipv6_address``: IP address of the subnet defined. In case of zone, this is an optional field for and allows users to allocate an IP address range to a zone. The VSD will auto-assign IP addresses to subnets from this range if a specific IP address is not defined for the subnet

- ``ipv6_gateway``: The IPv6 address of the gateway of this subnet

- ``evpn_enabled``: Indicates if EVPN capabilities are enabled for this subnet.

- ``maintenance_mode``: maintenanceMode is an enum that indicates if the SubNetwork is accepting VM activation requests.

- ``name`` (**Mandatory**): Name of the current entity(Zone or zone template or subnet etc..) Valid characters are alphabets, numbers, space and hyphen( - ).

- ``last_updated_by``: ID of the user who last updated the object.

- ``gateway``: The IP address of the gateway of this subnet

- ``gateway_mac_address``: None

- ``access_restriction_enabled``: This attribute specifies whether subnet is enabled with access restrictions. Note: Applicable to shared infrastructure enterprise subnets.

- ``address``: IP address of the subnet defined. In case of zone, this is an optional field for and allows users to allocate an IP address range to a zone. The VSD will auto-assign IP addresses to subnets from this range if a specific IP address is not defined for the subnet

- ``advertise``: Subnet will be advertised in Overlay and WAN BGP

- ``template_id``: The ID of the subnet template that this subnet object was derived from

- ``service_id``: The service ID used by the VSCs to identify this subnet

- ``description``: A description field provided by the user that identifies the subnet

- ``resource_type``: Defines the type of the subnet, PUBLIC,FLOATING,STANDARD OR NSG_VNF

- ``netmask``: Netmask of the subnet defined

- ``link_local_address``: IPv6 unicast address. Valid range is fe80::/64.

- ``embedded_metadata``: Metadata objects associated with this entity. This will contain a list of Metadata objects if the API request is made using the special flag to enable the embedded Metadata feature. Only a maximum of Metadata objects is returned based on the value set in the system configuration.

- ``vn_id``: Current Network's  globally unique  VXLAN network identifier generated by VSD

- ``enable_dhcpv4``: Turn on or off DHCP for of IPV4 Addresses

- ``enable_dhcpv6``: Turn on or off DHCP for IPv6 Addresses

- ``encryption``: Determines whether or not IPSEC is enabled.

- ``underlay``: Read Only Boolean flag to indicate whether underlay is enabled directly or indirectly

- ``underlay_enabled``: Indicates whether UNDERLAY is enabled for the subnets in this domain

- ``ingress_replication_enabled``: Enables ingress replication for the VNI.

- ``entity_scope``: Specify if scope of entity is Data center or Enterprise level

- ``entity_state``: Intermediate State of L2 Domain.

- ``policy_group_id``: PG ID for the subnet. This is unique per domain and will be in the range 1-4095

- ``color``: The color encoded with a traffic engineering constraint such as minimum latency, hops, maximum bandwidth, etc. This is used for NFIX(Network Function Interconnect). Color is applicable only when the associated Domain's Tunnel Type is MPLSoUDP. Valid range is 1 - 4294967295. If 0 is provided, color will be derived from the associated Domain.

- ``domain_service_label``: Service ID or external label given to Domain

- ``route_distinguisher``: Route distinguisher for this subnet that is used by the BGP-EVPN protocol in VSC. Supported formats are: [2-byte ASN]:[4-byte value] or [4-byte ASN]:[2-byte value]

- ``route_target``: Route target for this subnet that is used by the BGP-EVPN protocol in VSC. Supported formats are: [2-byte ASN]:[4-byte value] or [4-byte ASN]:[2-byte value]

- ``split_subnet``: Block subnet routes

- ``proxy_arp``:  When set, VRS will act as  ARP Proxy

- ``vrrp_ipv6_backup_address``: 7x50 VRRP IPv6 Backup Address. Valid range is fe80::/64.

- ``use_global_mac``: if this flag is enabled, the system configured globalMACAddress will be used as the gateway mac address

- ``associated_multicast_channel_map_id``: The ID of the Multi Cast Channel Map  this Subnet/Subnet Template is associated with. This has to be set when enableMultiCast is set to ENABLED

- ``associated_shared_network_resource_id``: The ID of public subnet that is associated with this subnet

- ``dual_stack_dynamic_ip_allocation``: This value indicates whether dynamic address allocation is enabled or not. This will be applicable when subnet is in dual stack mode.

- ``public``: when set to true means public subnet under a public zone

- ``subnet_vlanid``: Determines the VLANID for this associated Subnet.

- ``multi_home_enabled``: Boolean flag to indicate whether this is a Multi-homed subnet or not.

- ``multicast``: multicast is enum that indicates multicast policy on Subnet/Subnet Template.

- ``customer_id``: CustomerID that is used by NETCONF MANAGER to identify this enterprise. This can be configured by root user.

- ``external_id``: External object ID. Used for integration with third party systems




Children
--------

================================================================================================================================================               ==========================================================================================
**class**                                                                                                                                                      **fetcher**

:ref:`nupatipentry.NUPATIPEntry<nupatipentry>`                                                                                                                   ``patip_entries`` 
:ref:`nutca.NUTCA<nutca>`                                                                                                                                        ``tcas`` 
:ref:`nuaddressrange.NUAddressRange<nuaddressrange>`                                                                                                             ``address_ranges`` 
:ref:`nudefaultgateway.NUDefaultGateway<nudefaultgateway>`                                                                                                       ``default_gateways`` 
:ref:`nudeploymentfailure.NUDeploymentFailure<nudeploymentfailure>`                                                                                              ``deployment_failures`` 
:ref:`nuvmresync.NUVMResync<nuvmresync>`                                                                                                                         ``vm_resyncs`` 
:ref:`numetadata.NUMetadata<numetadata>`                                                                                                                         ``metadatas`` 
:ref:`nubgpneighbor.NUBGPNeighbor<nubgpneighbor>`                                                                                                                ``bgp_neighbors`` 
:ref:`nudhcpoption.NUDHCPOption<nudhcpoption>`                                                                                                                   ``dhcp_options`` 
:ref:`nudhcpv6option.NUDHCPv6Option<nudhcpv6option>`                                                                                                             ``dhcpv6_options`` 
:ref:`nuvirtualip.NUVirtualIP<nuvirtualip>`                                                                                                                      ``virtual_ips`` 
:ref:`nuikegatewayconnection.NUIKEGatewayConnection<nuikegatewayconnection>`                                                                                     ``ike_gateway_connections`` 
:ref:`nuglobalmetadata.NUGlobalMetadata<nuglobalmetadata>`                                                                                                       ``global_metadatas`` 
:ref:`nuvm.NUVM<nuvm>`                                                                                                                                           ``vms`` 
:ref:`nuvminterface.NUVMInterface<nuvminterface>`                                                                                                                ``vm_interfaces`` 
:ref:`nuenterprisepermission.NUEnterprisePermission<nuenterprisepermission>`                                                                                     ``enterprise_permissions`` 
:ref:`nucontainer.NUContainer<nucontainer>`                                                                                                                      ``containers`` 
:ref:`nucontainerinterface.NUContainerInterface<nucontainerinterface>`                                                                                           ``container_interfaces`` 
:ref:`nucontainerresync.NUContainerResync<nucontainerresync>`                                                                                                    ``container_resyncs`` 
:ref:`nuqos.NUQOS<nuqos>`                                                                                                                                        ``qoss`` 
:ref:`nuvport.NUVPort<nuvport>`                                                                                                                                  ``vports`` 
:ref:`nuipreservation.NUIPReservation<nuipreservation>`                                                                                                          ``ip_reservations`` 
:ref:`nuproxyarpfilter.NUProxyARPFilter<nuproxyarpfilter>`                                                                                                       ``proxy_arp_filters`` 
:ref:`nustatistics.NUStatistics<nustatistics>`                                                                                                                   ``statistics`` 
:ref:`nustatisticspolicy.NUStatisticsPolicy<nustatisticspolicy>`                                                                                                 ``statistics_policies`` 
:ref:`nueventlog.NUEventLog<nueventlog>`                                                                                                                         ``event_logs`` 
================================================================================================================================================               ==========================================================================================



Parents
--------


- :ref:`nuzone.NUZone<nuzone>`

- :ref:`nume.NUMe<nume>`

- :ref:`nusubnettemplate.NUSubnetTemplate<nusubnettemplate>`

- :ref:`nuikegatewayconnection.NUIKEGatewayConnection<nuikegatewayconnection>`

- :ref:`nunetconfgateway.NUNetconfGateway<nunetconfgateway>`

- :ref:`nudomain.NUDomain<nudomain>`

- :ref:`nugateway.NUGateway<nugateway>`

- :ref:`nunsgateway.NUNSGateway<nunsgateway>`

- :ref:`nupatmapper.NUPATMapper<nupatmapper>`

- :ref:`nuaggregateddomain.NUAggregatedDomain<nuaggregateddomain>`

