.. _nulicense:

nulicense
===========================================

.. class:: nulicense.NULicense(bambou.nurest_object.NUMetaRESTObject,):

Enables retrieval/modification and creation of license files. Most of the attributes are retrieved from the encrypted license. The create API simply provides the encrypted license that is in base64 format.


Attributes
----------


- ``major_release``: Major software release associated with this license

- ``last_updated_by``: ID of the user who last updated the object.

- ``last_updated_date``: Time stamp when this object was last updated.

- ``additional_supported_versions``: Indicates additional versions supported by the license.

- ``request_id``: Unique number generated by the License Management system used to identify each license.

- ``phone``: Phone number of the owner associated with the license file

- ``license`` (**Mandatory**): Base 64 value of the license

- ``license_encryption``: License encryption

- ``license_entities``: Indicates non enforceable entities associated with the license. 

- ``license_id``: Unique identifier of the license file

- ``license_type``: None

- ``licensed_feature``: Indicates the feature supported by the license. Possible value is "vss".

- ``minor_release``: Minor software release for which this license has been issued

- ``zip``: Zipcode of the owner associated with the license file

- ``city``: City of the owner associated with the license file

- ``allowed_avrsgs_count``: Maximum number of AVRSGs enabled with this license. A value of -1 indicates an unlimited number of AVRSGs

- ``allowed_avrss_count``: Maximum number of AVRSs enabled with this license. A value of -1 indicates an unlimited number of AVRSs

- ``allowed_cpes_count``: Maximum number of NSGs enabled with this license. A value of -1 indicates an unlimited number of NSGs

- ``allowed_nics_count``: Maximum number of NICs allowed. A value of -1 indicates unlimited number of NICs

- ``allowed_vdfgs_count``: Maximum number of VDFGs enabled with this license. A value of -1 indicates an unlimited number of VDFGs.

- ``allowed_vdfs_count``: Maximum number of VDFs enabled with this license. A value of -1 indicates an unlimited number of VDFs

- ``allowed_vms_count``: Maximum number of VMs enabled with this license. A value of -1 indicates an unlimited number of VMs

- ``allowed_vrsgs_count``: Maximum number of VRSGs enabled with this license. A value of -1 indicates an unlimited number of VRSGs

- ``allowed_vrss_count``: Maximum number of VRSs enabled with this license. A value of -1 indicates an unlimited number of VRSs

- ``email``: Email of the owner associated with the license file

- ``embedded_metadata``: Metadata objects associated with this entity. This will contain a list of Metadata objects if the API request is made using the special flag to enable the embedded Metadata feature. Only a maximum of Metadata objects is returned based on the value set in the system configuration.

- ``encryption_mode``: Indicates if the system is associated with a license that allows encryption or not

- ``unique_license_identifier``: Indicates combined string of first 16 and last 16 characters of the license string to be shown in the API

- ``entity_scope``: Specify if scope of entity is Data center or Enterprise level

- ``company``: Company of the owner associated with the license file

- ``country``: Country of the owner associated with the license file

- ``creation_date``: Time stamp when this object was created.

- ``product_version``: Version of the product that this license applies to

- ``provider``: Provider of the license file

- ``is_cluster_license``: Indicates if the license is associated with standlone or cluster setup of VSD

- ``user_name``: The name of the user associated with the license

- ``state``: State of the owner associated with the license file

- ``street``: Address of the owner associated with the license file

- ``customer_key``: Customer key associated with the licese

- ``owner``: Identifies the user that has created this object.

- ``expiration_date``: Expiration date of this license

- ``expiry_timestamp``: The Timestamp value of the expiration date of this license

- ``external_id``: External object ID. Used for integration with third party systems

- ``system``: System name information provided by the License Management System.




Children
--------

================================================================================================================================================               ==========================================================================================
**class**                                                                                                                                                      **fetcher**

:ref:`nupermission.NUPermission<nupermission>`                                                                                                                   ``permissions`` 
:ref:`numetadata.NUMetadata<numetadata>`                                                                                                                         ``metadatas`` 
:ref:`nuglobalmetadata.NUGlobalMetadata<nuglobalmetadata>`                                                                                                       ``global_metadatas`` 
:ref:`nueventlog.NUEventLog<nueventlog>`                                                                                                                         ``event_logs`` 
================================================================================================================================================               ==========================================================================================



Parents
--------


- :ref:`nume.NUMe<nume>`

