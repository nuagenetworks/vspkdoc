.. _nushuntlink:

nushuntlink
===========================================

.. class:: nushuntlink.NUShuntLink(bambou.nurest_object.NUMetaRESTObject,):

A shunt link represents an alliance of uplink interface resources between two NSGs belonging to a Redundant Group.  An operator specifies which network port-VLAN from each NSG peers to be considered as shunted together so that control uplinks from each NSG may be used by the other.


Attributes
----------


- ``vlan_peer1_id`` (**Mandatory**): The ID of the shunted VLAN from the first NSG of the redundant gateway group.

- ``vlan_peer2_id`` (**Mandatory**): The ID of the shunted VLAN from the second NSG of the redundant gateway group.

- ``name``: The name auto-generated by VSD and given to a newly created Shunt Link.

- ``last_updated_by``: ID of the user who last updated the object.

- ``gateway_peer1_id``: The ID of the first NSG of the redundant gateway group part of this Shunt Link.

- ``gateway_peer2_id``: The ID of the second NSG of the redundant gateway group part of this Shunt Link.

- ``permitted_action``: The permitted action to USE/EXTEND this Shunt Link

- ``description``: Extra information entered by the operator to define the Shunt Link.

- ``embedded_metadata``: Metadata objects associated with this entity. This will contain a list of Metadata objects if the API request is made using the special flag to enable the embedded Metadata feature. Only a maximum of Metadata objects is returned based on the value set in the system configuration.

- ``entity_scope``: Specify if scope of entity is Data center or Enterprise level

- ``external_id``: External object ID. Used for integration with third party systems




Children
--------

================================================================================================================================================               ==========================================================================================
**class**                                                                                                                                                      **fetcher**

:ref:`numetadata.NUMetadata<numetadata>`                                                                                                                         ``metadatas`` 
:ref:`nualarm.NUAlarm<nualarm>`                                                                                                                                  ``alarms`` 
:ref:`nuglobalmetadata.NUGlobalMetadata<nuglobalmetadata>`                                                                                                       ``global_metadatas`` 
================================================================================================================================================               ==========================================================================================



Parents
--------


- :ref:`nunsredundantgatewaygroup.NUNSRedundantGatewayGroup<nunsredundantgatewaygroup>`

